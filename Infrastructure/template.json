{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.12.1.58429",
      "templateHash": "7153855447950982296"
    }
  },
  "parameters": {
    "PlatformTag": {
      "type": "string",
      "defaultValue": "p"
    },
    "EnvironmentTag": {
      "type": "string",
      "defaultValue": "e"
    },
    "SubsystemTag": {
      "type": "string",
      "defaultValue": "s"
    },
    "ContainerInstanceName": {
      "type": "string",
      "defaultValue": "testci"
    },
    "ContainerImageName": {
      "type": "string",
      "defaultValue": "helloconsole:latest"
    },
    "LogicAppName": {
      "type": "string"
    },
    "LogicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "ContainerRegistryConnectionName": {
      "type": "string",
      "defaultValue": "aci-1"
    },
    "ContainerRegistryName": {
      "type": "string"
    },
    "ContainerRegistryLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    }
  },
  "variables": {
    "ci_create_aci_path": "[format('{0}/providers/Microsoft.ContainerInstance/containerGroups/@{{encodeURIComponent(variables(''ci_name''))}}', resourceGroup().id)]",
    "ci_getproperties_path": "[format('{0}/providers/Microsoft.ContainerInstance/containerGroups/@{{encodeURIComponent(body(''Create_or_update_a_container_group'')?[''name''])}}', resourceGroup().id)]"
  },
  "resources": [
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2022-02-01-preview",
      "name": "[parameters('ContainerRegistryName')]",
      "location": "[parameters('ContainerRegistryLocation')]",
      "tags": {
        "Platform": "[parameters('PlatformTag')]",
        "Env": "[parameters('EnvironmentTag')]",
        "SubSystem": "[parameters('SubsystemTag')]"
      },
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "adminUserEnabled": true,
        "policies": {
          "retentionPolicy": {
            "days": 7,
            "status": "disabled"
          },
          "exportPolicy": {
            "status": "enabled"
          },
          "azureADAuthenticationAsArmPolicy": {
            "status": "enabled"
          },
          "softDeletePolicy": {
            "retentionDays": 7,
            "status": "disabled"
          }
        },
        "encryption": {
          "status": "disabled"
        },
        "dataEndpointEnabled": false,
        "publicNetworkAccess": "Enabled",
        "networkRuleBypassOptions": "AzureServices",
        "zoneRedundancy": "Disabled"
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[parameters('ContainerRegistryConnectionName')]",
      "location": "[parameters('LogicAppLocation')]",
      "properties": {
        "displayName": "aci",
        "statuses": [
          {
            "status": "Connected"
          }
        ],
        "customParameterValues": {},
        "nonSecretParameterValues": {
          "token:TenantId": "a871fdca-22af-4ddd-b902-f381041deaa3",
          "token:grantType": "code"
        },
        "createdTime": "2023-01-03T03:46:36.3137984Z",
        "changedTime": "2023-01-08T01:38:49.6004525Z",
        "api": {
          "name": "aci",
          "displayName": "Azure Container Instance",
          "description": "Easily run containers on Azure with a single command. Create container groups, get the logs of a container and more.",
          "iconUri": "https://connectoricons-prod.azureedge.net/releases/v1.0.1479/1.0.1479.2452/aci/icon.png",
          "brandColor": "#0089D0",
          "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/aci', subscription().subscriptionId, parameters('LogicAppLocation'))]",
          "type": "Microsoft.Web/locations/managedApis"
        },
        "testLinks": []
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('LogicAppName')]",
      "location": "[parameters('LogicAppLocation')]",
      "tags": {
        "Platform": "[parameters('PlatformTag')]",
        "Env": "[parameters('EnvironmentTag')]",
        "SubSystem": "[parameters('SubsystemTag')]"
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {}
              }
            }
          },
          "actions": {
            "Create_or_update_a_container_group": {
              "runAfter": {
                "image-name": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "location": "[parameters('LogicAppLocation')]",
                  "properties": {
                    "containers": [
                      {
                        "name": "@variables('ci_name')",
                        "properties": {
                          "environmentVariables": [
                            {
                              "name": "max_count",
                              "value": "@{variables('loopCount')}"
                            }
                          ],
                          "image": "@variables('image')",
                          "resources": {
                            "requests": {
                              "cpu": 1,
                              "memoryInGB": "3.5"
                            }
                          }
                        }
                      }
                    ],
                    "imageRegistryCredentials": [
                      {
                        "password": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('ContainerRegistryName')), '2022-02-01-preview').passwords[0].value]",
                        "server": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('ContainerRegistryName')), '2022-02-01-preview').loginServer]",
                        "username": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('ContainerRegistryName')), '2022-02-01-preview').username]"
                      }
                    ],
                    "osType": "Linux",
                    "restartPolicy": "OnFailure",
                    "sku": "Standard"
                  }
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['aci']['connectionId']"
                  }
                },
                "method": "put",
                "path": "[variables('ci_create_aci_path')]",
                "queries": {
                  "x-ms-api-version": "2019-12-01"
                }
              }
            },
            "Until": {
              "actions": {
                "Condition": {
                  "actions": {
                    "Delete_a_container_group": {
                      "runAfter": {
                        "Get_logs_from_a_container_instance": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['aci']['connectionId']"
                          }
                        },
                        "method": "delete",
                        "path": "[variables('ci_create_aci_path')]",
                        "queries": {
                          "x-ms-api-version": "2019-12-01"
                        }
                      }
                    },
                    "Get_logs_from_a_container_instance": {
                      "runAfter": {},
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['aci']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "[format('{0}/containers/@{{encodeURIComponent(variables(''ci_name''))}}/logs', variables('ci_create_aci_path'))]",
                        "queries": {
                          "x-ms-api-version": "2019-12-01"
                        }
                      }
                    }
                  },
                  "runAfter": {
                    "Get_properties_of_a_container_group": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Delay": {
                        "runAfter": {},
                        "type": "Wait",
                        "inputs": {
                          "interval": {
                            "count": 10,
                            "unit": "Second"
                          }
                        }
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@body('Get_properties_of_a_container_group')?['properties']?['instanceView']?['state']",
                          "Succeeded"
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "Get_properties_of_a_container_group": {
                  "runAfter": {},
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['aci']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "[variables('ci_getproperties_path')]",
                    "queries": {
                      "x-ms-api-version": "2019-12-01"
                    }
                  }
                }
              },
              "runAfter": {
                "Create_or_update_a_container_group": [
                  "Succeeded"
                ]
              },
              "expression": "@equals(body('Get_properties_of_a_container_group')?['properties']?['instanceView']?['state'], 'Succeeded')",
              "limit": {
                "count": 60,
                "timeout": "PT1H"
              },
              "type": "Until"
            },
            "ci-name": {
              "runAfter": {
                "loopCount": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ci_name",
                    "type": "string",
                    "value": "[parameters('ContainerInstanceName')]"
                  }
                ]
              }
            },
            "image-name": {
              "runAfter": {
                "ci-name": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "image",
                    "type": "string",
                    "value": "[format('{0}/{1}', reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('ContainerRegistryName')), '2022-02-01-preview').loginServer, parameters('ContainerImageName'))]"
                  }
                ]
              }
            },
            "loopCount": {
              "runAfter": {},
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "loopCount",
                    "type": "integer",
                    "value": 5
                  }
                ]
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "aci": {
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('ContainerRegistryConnectionName'))]",
                "connectionName": "aci-1",
                "id": "[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/aci', subscription().subscriptionId, parameters('LogicAppLocation'))]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('ContainerRegistryName'))]",
        "[resourceId('Microsoft.Web/connections', parameters('ContainerRegistryConnectionName'))]"
      ]
    }
  ]
}